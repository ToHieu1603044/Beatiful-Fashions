import axios from "axios";
import React, { useEffect, useState } from "react";
import { getCart } from "../../services/homeService";
import { useNavigate } from "react-router-dom";
import { toast } from "react-toastify"; // Make sure toastify is imported for alerts
import axiosInstance from "../../services/axiosInstance";
import Swal from 'sweetalert2'
import { set } from "react-hook-form";

const CheckOut = () => {
    const userJson = localStorage.getItem("user");
    const user = userJson ? JSON.parse(userJson).user : null;
    const [bank, setBank] = useState<undefined | number>();
    const [provinces, setProvinces] = useState([]);
    const [districts, setDistricts] = useState([]);
    const [wards, setWards] = useState([]);
    const [selectedProvince, setSelectedProvince] = useState("");
    const [selectedDistrict, setSelectedDistrict] = useState("");
    const [selectedWard, setSelectedWard] = useState("");
    const [totalAmount, setTotalAmount] = useState(0);
    const [discountedTotal, setDiscountedTotal] = useState(0);
    const [formData, setFormData] = useState({
        email: "",
        name: "",
        phone: "",
        address: "",
        discount: "",
        total_amount: discountedTotal,
        payment_method: "",
        note: "",
        province: "",
        city: "",
        district: "",
        district_name: "",
        ward: ""
    });
    const [products, setProducts] = useState([]);
    const [priceDiscount, setPriceDiscount] = useState(0);
    const [priceShipping, setPriceShipping] = useState(45000);


    const navigate = useNavigate();

    useEffect(() => {
        fetchCarts();
    }, []);
    useEffect(() => {
        setFormData((prev) => ({
            ...prev,
            total_amount: discountedTotal
        }));
    }, [discountedTotal]);

    const fetchCarts = async () => {
        try {
            const response = await getCart();
            const cartData = response.data.data.map(item => ({
                ...item,
                quantity: item.quantity || 1,
            }));
            setProducts(cartData);
            calculateTotal(cartData);
        } catch (error) {
            if (error.response && error.response.status === 401) {
                navigate("/login");
            } else {
                toast.error("L·ªói khi l·∫•y gi·ªè h√†ng. Vui l√≤ng th·ª≠ l·∫°i!");
                console.error("L·ªói khi l·∫•y gi·ªè h√†ng:", error);
            }
        }
    };

    // call api ƒëia ch·ªâ
    useEffect(() => {
        axios
            .get("http://127.0.0.1:8000/api/provinces")
            .then((response) => setProvinces(response.data))
            .catch((error) => console.error("Error fetching provinces:", error));
    }, []);
    
    useEffect(() => {
        if (selectedProvince) {
            axios
                .get(`http://127.0.0.1:8000/api/provinces/${selectedProvince}?depth=2`)
                .then((response) => setDistricts(response.data.districts))
                .catch((error) => console.error("Error fetching districts:", error));
        }
    }, [selectedProvince]);
    
    useEffect(() => {
        if (selectedDistrict) {
            axios
                .get(`http://127.0.0.1:8000/api/districts/${selectedDistrict}?depth=2`)
                .then((response) => setWards(response.data.wards))
                .catch((error) => console.error("Error fetching wards:", error));
        }
    }, [selectedDistrict]);
    
    const calculateTotal = (items: any[]) => {
        const total = items.reduce((sum, item) => sum + item.price * item.quantity, 0);
        console.log("Total amount:", total);

        setTotalAmount(total);
        setDiscountedTotal(total);
    };

    const applyDiscount = async (e: React.FormEvent) => {
        e.preventDefault();
    
        console.log("M√£ gi·∫£m gi√° g·ª≠i ƒëi:", formData.discount);
    
        if (!formData.discount) {
            Swal.fire({
                title: "L·ªói!",
                text: "Vui l√≤ng nh·∫≠p m√£ gi·∫£m gi√°.",
                icon: "error",
                confirmButtonText: "OK",
            });
            return;
        }
    
        try {
            const response = await axios.post("http://127.0.0.1:8000/api/discounts/apply", {
                discountCode: formData.discount,  // ƒê√∫ng key API Laravel mong ƒë·ª£i
                totalAmount: totalAmount,
            }, {
                headers: { "Content-Type": "application/json" },
            });
    
            console.log("Response data:", response.data);
    
            const discount = response.data.discountAmount || 0;
            console.log("Discount amount:", discount);
            const newTotal = Math.max(totalAmount - discount, 0);
    
            setDiscountedTotal(newTotal);
            setPriceDiscount(discount);
    
            Swal.fire({
                title: "Th√†nh c√¥ng!",
                text: response.data.message || "Gi·∫£m gi√° √°p d·ª•ng th√†nh c√¥ng!",
                icon: "success",
                confirmButtonText: "OK",
            });
    
        } catch (error: any) {
            const errorMessage = error.response?.data?.message || "L·ªói khi √°p d·ª•ng m√£ gi·∫£m gi√°. Vui l√≤ng th·ª≠ l·∫°i!";
    
            Swal.fire({
                title: "L·ªói!",
                text: errorMessage,
                icon: "error",
                confirmButtonText: "OK",
            });
    
            console.error("Error applying discount:", error);
        }
    };
    
    


    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        console.log("D·ªØ li·ªáu ƒë√£ g·ª≠i:", JSON.stringify(formData, null, 2));

        try {


            const response = await axiosInstance.post('/orders', formData, {
                headers: { 'Content-Type': 'application/json' },
            });

            console.log("Response t·ª´ backend:", response.data);

            if (response.data.payUrl) {
                console.log("üîó Chuy·ªÉn h∆∞·ªõng ƒë·∫øn MoMo:", response.data.payUrl);
                window.open(response.data.payUrl, "_self");
                return;
            }

            if (response.status === 200) {
                Swal.fire({
                    title: "ƒê·∫∑t h√†ng th√†nh c√¥ng",
                    icon: "success",
                    confirmButtonText: "OK",
                }).then(() => {
                    window.location.href = "/orders";
                });
            }

        } catch (error: any) {
            console.error("L·ªói khi g·ª≠i d·ªØ li·ªáu:", error);
            Swal.fire({
                title: "L·ªói!",
                text: error.response?.data?.message || "ƒê√£ x·∫£y ra l·ªói, vui l√≤ng th·ª≠ l·∫°i!",
                icon: "error",
                confirmButtonText: "OK",
            });
        }
    };

    return (
        <>
            <div
                className="w-100 d-flex"
                style={{
                    pointerEvents: user ? "none" : "auto",
                    opacity: user ? 0.6 : 1,
                    cursor: user ? "not-allowed" : "auto",
                }}
            >
                {/* left */}
                <div
                    className=""
                    style={{ width: "65%", paddingLeft: "170px" }}
                >
                    {/* logo shop */}
                    <div className="w-100">
                        <img
                            src="https://bizweb.dktcdn.net/100/347/891/themes/710583/assets/checkout_logo.png?1739517244563"
                            alt=""
                            style={{
                                width: "55px",
                                marginTop: "30px",
                                marginBottom: "30px",
                            }}
                        />
                    </div>
                    {/* th√¥ng tin user */}
                    <div
                        className="w-100 d-flex justify-content-between pb-4"
                        style={{ borderBottom: "1px solid #ccc" }}
                    >
                        <div style={{ width: "50%" }}>
                            {/* text */}
                            <div className="d-flex align-items-center justify-content-between">
                                <h2
                                    className="fw-bolder"
                                    style={{ fontSize: "20px" }}
                                >
                                    ThoÃÇng tin nh·∫≠n h√†ng
                                </h2>
                                {user ? (
                                    <></>
                                ) : (
                                    <>
                                        <p
                                            className="text-danger"
                                            style={{
                                                fontSize: "15px",
                                                cursor: "pointer",
                                            }}
                                        >
                                            {/* <i className="fa-regular fa-circle-user me-1"></i>
                                            <span>ƒêƒÉng nh·∫≠p </span> */}
                                        </p>
                                    </>
                                )}
                            </div>
                            {/* form */}
                            <div
                                className="mt-3"
                                style={{
                                    pointerEvents: user ? "none" : "auto",
                                    opacity: user ? 0.6 : 1,
                                    cursor: user ? "not-allowed" : "auto",
                                }}
                            >
                                <form onSubmit={handleSubmit}>
                                    {/* email */}
                                    <div className="mb-3">
                                        <input type="text" className="form-control" placeholder="Email"
                                            onChange={(e) => setFormData({ ...formData, email: e.target.value })}
                                            style={{ height: "45px" }}
                                        />
                                    </div>
                                    {/* h·ªç v√† t√™n */}
                                    <div className="mb-3">
                                        <input
                                            type="text"
                                            className="form-control"
                                            placeholder="H·ªç v√† t√™n"
                                            onChange={(e) => setFormData({ ...formData, name: e.target.value })}
                                            style={{ height: "45px" }}
                                        />
                                    </div>
                                    {/* s·ªë ƒëi·ªán tho·∫°i */}
                                    <div className="mb-3">
                                        <input
                                            type="text"
                                            className="form-control"
                                            placeholder="S·ªë ƒëi·ªán tho·∫°i"
                                            onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
                                            style={{ height: "45px" }}
                                        />
                                    </div>
                                    {/* t·ªânh th√†nh */}
                                    <div className="mb-3">
                                        <select
                                            value={selectedProvince}
                                            onChange={(e) => {
                                                const provinceCode = e.target.value;
                                                const provinceName = provinces.find(p => p.code == provinceCode)?.name || "";

                                                setSelectedProvince(provinceCode);
                                                setFormData(prev => ({
                                                    ...prev,
                                                    province: provinceCode,
                                                    city: provinceName,

                                                }));
                                            }}
                                            className="form-select"
                                        >
                                            <option value="" disabled>Ch·ªçn t·ªânh th√†nh</option>
                                            {provinces.map(province => (
                                                <option key={province.code} value={province.code}>{province.name}</option>
                                            ))}
                                        </select>

                                    </div>
                                    {/* Qu·∫≠n Huy·ªán */}
                                    <div className="mb-3">
                                        <select
                                            value={selectedDistrict}
                                            onChange={(e) => {
                                                const districtCode = e.target.value;
                                                const districtName = districts.find(d => d.code == districtCode)?.name || "";

                                                setSelectedDistrict(districtCode);
                                                setFormData(prev => ({
                                                    ...prev,
                                                    district: districtCode, // L∆∞u m√£ qu·∫≠n/huy·ªán
                                                    district_name: districtName, // L∆∞u t√™n qu·∫≠n/huy·ªán
                                                    ward: "" // Reset ph∆∞·ªùng/x√£ khi thay ƒë·ªïi qu·∫≠n/huy·ªán
                                                }));
                                            }}
                                            className="form-select"
                                        >
                                            <option value="" disabled>Ch·ªçn qu·∫≠n huy·ªán</option>
                                            {districts.map(district => (
                                                <option key={district.code} value={district.code}>{district.name}</option>
                                            ))}
                                        </select>

                                    </div>
                                    {/* Ph∆∞·ªùng x√£ */}
                                    <div className="mb-3">
                                        <select
                                            value={selectedWard}
                                            onChange={(e) => {
                                                setSelectedWard(e.target.value);
                                                setFormData({ ...formData, ward: e.target.value });
                                            }}
                                            className="form-select"
                                        >
                                            <option value="" disabled selected>Ch·ªçn ph∆∞·ªùng x√£</option>
                                            {wards.map(ward => (
                                                <option key={ward.code} value={ward.name}>{ward.name}</option>
                                            ))}
                                        </select>
                                    </div>
                                    {/* ƒê·ªãa ch·ªâ */}
                                    <div className="mb-3">
                                        <input
                                            type="text"
                                            className="form-control"
                                            placeholder="ƒê·ªãa ch·ªâ"
                                            onChange={(e) => setFormData({ ...formData, address: e.target.value })}
                                            style={{ height: "45px" }}
                                        />
                                    </div>
                                    {/* Ghi ch√∫ */}
                                    <div className="mb-3">
                                        <textarea
                                            cols={10}
                                            rows={5}
                                            placeholder="Ghi ch√∫"
                                            className="form-control"
                                            onChange={(e) => setFormData({ ...formData, note: e.target.value })}
                                        ></textarea>
                                    </div>
                                    {/* N√∫t submit */}
                                    <button type="submit" className="btn btn-primary">Thanh to√°n</button>
                                </form>
                            </div>
                        </div>
                        <div style={{ width: "45%", marginRight: "30px" }}>
                            {" "}
                            <h2
                                className="fw-bolder"
                                style={{ fontSize: "20px" }}
                            >
                                V·∫≠n chuy·ªÉn
                            </h2>
                            {/* chuy·ªÉn ph√°t nhanh  */}
                            <div
                                className="mt-3"
                                style={{
                                    border: "1px solid #C0C0C0",
                                    padding: "10px",
                                    borderRadius: "5px",
                                    height: "45px",
                                }}
                            >
                                <form action="" className="d-flex">
                                    <input
                                        className="form-check-input me-1"
                                        type="radio"
                                        name="flexRadioDefault"
                                        id="flexRadioDefault"

                                    // checked: n·∫øu mu·ªën nh∆∞ m·∫´u th√¨ b·ªè cmt(check ƒë·ªÉ t·ª± ƒë·ªông ch·ªçn m√† ko c·∫ßn ng d√πng b·∫•m ch·ªçn)
                                    />
                                    <div className="d-flex">
                                        {" "}
                                        <p
                                            style={{
                                                textTransform: "uppercase",
                                            }}
                                        >
                                            chuy·ªÉn ph√°t nhanh
                                        </p>
                                        <p style={{ marginLeft: "90px" }}>
                                            45.000ƒë
                                        </p>
                                    </div>
                                </form>
                            </div>
                            {/* thanh to√°n */}
                            <div className="mt-4">
                                <h2
                                    className="fw-bolder"
                                    style={{ fontSize: "20px" }}
                                >
                                    Thanh to√°n
                                </h2>
                                <form action="" className="mt-3">
                                    <div
                                        style={{
                                            border: "1px solid #C0C0C0",
                                            padding: "10px",
                                            paddingBottom: "40px",
                                            borderTopLeftRadius: "5px",
                                            borderStartEndRadius: "5px",
                                            height: "45px",
                                        }}
                                    >
                                        <input
                                            className="form-check-input me-1 "
                                            type="radio"
                                            name="flexRadioDefault"
                                            id="flexRadioDefault1"
                                            onClick={() => setBank(1)}
                                            value={"online"}
                                            onChange={(e) => setFormData({ ...formData, payment_method: e.target.value })}
                                        />
                                        <label
                                            className="form-check-label"
                                            htmlFor="flexRadioDefault1"
                                        >
                                            Chuy·ªÉn kho·∫£n qua ng√¢n h√†ng{" "}
                                            <i
                                                className="fa-regular fa-money-bill-1 text-danger"
                                                style={{
                                                    fontSize: "20px",
                                                    marginLeft: "80px",
                                                }}
                                            ></i>
                                        </label>
                                    </div>
                                    <div
                                        style={{
                                            backgroundColor: "#EEEEEE",
                                            padding: "30px 10px",
                                            borderEndStartRadius: "5px",
                                            borderBottomRightRadius: "5px",
                                            display:
                                                bank === 1 ? "block" : "none",
                                        }}
                                    >
                                        <p>
                                            Qu√Ω Kh√°ch vui l√≤ng ghi r√µ n·ªôi dung
                                            chuy·ªÉn ti·ªÅn :
                                        </p>

                                        <p>‚òÖ T√äN + M√É ƒê∆†N H√ÄNG</p>

                                        <p>
                                            Nh·∫≠n ƒë∆∞·ª£c chuy·ªÉn kho·∫£n shop s·∫Ω g·ª≠i
                                            email th√¥ng b√°o x√°c nh·∫≠n thanh to√°n
                                            v√† ƒë√≥ng g√≥i / g·ª≠i h√†ng ngay .
                                        </p>

                                        <p>
                                            Ng√¢n h√†ng TMCP C√¥ng th∆∞∆°ng Vi·ªát Nam
                                        </p>
                                        <p>NGUYEN DUC DUNG </p>
                                        <p>103004408358</p>
                                    </div>
                                    <div
                                        style={{
                                            border: "1px solid #C0C0C0",
                                            padding: "10px",
                                            paddingBottom: "40px",
                                            borderEndStartRadius: "5px",
                                            borderBottomRightRadius: "5px",
                                            height: "45px",
                                        }}
                                    >
                                        <input
                                            className="form-check-input me-1"
                                            type="radio"
                                            name="flexRadioDefault"
                                            id="flexRadioDefault2"
                                            value={"cod"}
                                            onClick={() => setBank(2)}
                                            onChange={(e) => setFormData({ ...formData, payment_method: e.target.value })}
                                        />
                                        <label
                                            className="form-check-label"
                                            htmlFor="flexRadioDefault2"
                                        >
                                            Thanh to√°n khi nh·∫≠n h√†ng (COD)
                                            <i
                                                className="fa-regular fa-money-bill-1 text-danger"
                                                style={{
                                                    fontSize: "20px",
                                                    marginLeft: "65px",
                                                }}
                                            ></i>
                                        </label>
                                    </div>
                                    <div
                                        style={{
                                            backgroundColor: "#EEEEEE",
                                            padding: "20px 10px",
                                            borderEndStartRadius: "5px",
                                            borderBottomRightRadius: "5px",
                                            display:
                                                bank === 2 ? "block" : "none",
                                        }}
                                    >
                                        <p>
                                            Thanh to√°n khi nh·∫≠n h√†ng Th·ªùi gian
                                        </p>
                                        <p>nh·∫≠n h√†ng D·ª± ki·∫øn 2-4 ng√†y .</p>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                {/* right */}
                <div className="pt-3" style={{ width: "35%", backgroundColor: "#EEEEEEE", paddingLeft: "25px" }}>
                    <p className="fs-5 fw-bolder mb-4">ƒê∆°n h√†ng ({products.length} s·∫£n ph·∫©m)</p>
                    <div className="py-3" style={{ borderTop: "1px solid #C0C0C0", borderBottom: "1px solid #C0C0C0", maxHeight: "200px", overflowY: "scroll" }}>
                        {products.map((item, index) => (
                            <div key={index} className="d-flex align-items-center">
                                <div className="position-relative" style={{ width: "100px" }}>
                                    <img
                                        src={item.product.image || "https://placeholder.com/50"}
                                        alt=""
                                        style={{ width: "50px", height: "50px", objectFit: "cover", border: "1px solid #C0C0C0", borderRadius: "5px" }}
                                    />
                                    <p style={{
                                        position: "absolute",
                                        top: "-5px",
                                        right: "40px",
                                        width: "20px",
                                        height: "20px",
                                        fontSize: "12px",
                                        backgroundColor: "red",
                                        borderRadius: "50%",
                                        color: "white",
                                        display: "flex",
                                        justifyContent: "center",
                                        alignItems: "center"
                                    }}>{item.quantity}</p>
                                </div>
                                <div style={{ marginLeft: "-30px", width: "230px" }}>
                                    <p>{item.product.name}</p>
                                    {item.product.attributes && item.product.attributes.map((attr, attrIndex) => (
                                        <p key={attrIndex} style={{ marginTop: "-15px" }}>
                                            {attr.attribute}: {attr.value}
                                        </p>
                                    ))}
                                </div>
                                <p style={{ marginLeft: "60px" }}>{item.price.toLocaleString()}‚Ç´</p>
                            </div>
                        ))}
                    </div>
                    <div className="py-3 pl-5" style={{ borderBottom: "1px solid #C0C0C0" }}>
                        <form onSubmit={applyDiscount} className="d-flex">
                            <input
                                type="text"
                                className="form-control me-2"
                                placeholder="Nh·∫≠p m√£ gi·∫£m gi√°"
                                style={{ height: "50px", width: "250px" }}
                                onChange={(e) => setFormData({ ...formData, discount: e.target.value })}
                            />
                            <button type="submit" className="btn btn-warning mt-2">√Åp D·ª•ng</button>
                        </form>
                    </div>
                    <div className="py-3 pl-5" style={{ borderBottom: "1px solid #C0C0C0" }}>
                        <div className="d-flex justify-content-between mb-3">
                            <p>T·∫°m T√≠nh</p>
                            <p>{totalAmount.toLocaleString()}‚Ç´</p>
                        </div>
                        <div className="d-flex justify-content-between">
                            <p>Ph√≠ V·∫≠n Chuy·ªÉn</p>
                            <p>{priceShipping.toLocaleString()}‚Ç´</p>
                        </div>
                        <div className="d-flex justify-content-between">
                            <p>Gi·∫£m Gi√°</p>
                            <p>{priceDiscount.toLocaleString()}‚Ç´</p>
                        </div>
                    </div>
                    <div className="py-3 pl-5" style={{ borderBottom: "1px solid #C0C0C0" }}>
                        <div className="d-flex justify-content-between mb-2">
                            <p>T·ªïng c·ªông</p>
                            <p>{(discountedTotal + priceShipping).toLocaleString()}‚Ç´</p>

                        </div>
                        <div className="d-flex justify-content-between align-items-center">
                            <p className="text-danger"></p>
                        </div>
                    </div>
                </div>
            </div>
        </>
    );
};

export default CheckOut;
